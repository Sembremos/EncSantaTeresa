import streamlit as st
import pandas as pd
from datetime import datetime
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from PIL import Image

# === PARTE 0: CONFIGURACI√ìN INICIAL Y SESI√ìN ===
if "enviado" not in st.session_state:
    st.session_state.enviado = False

# Valores por defecto para variables de preguntas retiradas
escolaridad = ""
tipo_local = ""
falta_de_inversion = []
consumo_drogas = []
bunker = []
venta_drogas = []
delitos_vida = []
estafas = []
observacion_control = ""
descripcion_control = []
exigencia_cuota = ""
descripcion_cuota = ""

# === PARTE 1: IMPORTACIONES Y CONEXI√ìN A GOOGLE SHEETS ===
def conectar_google_sheets():
    try:
        scope = [
            "https://spreadsheets.google.com/feeds",
            "https://www.googleapis.com/auth/drive"
        ]
        # Obtener credenciales desde st.secrets
        creds_dict = st.secrets.get("gcp_service_account")
        if not creds_dict:
            st.error("‚ùå No se encontr√≥ 'gcp_service_account' en st.secrets.")
            return None

        creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
        client = gspread.authorize(creds)

        # Abre la hoja por key (aseg√∫rate que la key est√© correcta)
        SPREADSHEET_KEY = "1xmQOqnUJUHhLEcBSDAbZX3wNGYmSe34ec8RWaxAUI10"
        try:
            sheet = client.open_by_key(SPREADSHEET_KEY).sheet1
        except Exception as e:
            st.error(f"‚ùå No se pudo abrir el spreadsheet con la key indicada: {e}")
            return None

        # --- Crear encabezados si la hoja est√° vac√≠a ---
        try:
            current = sheet.get_all_values()  # lista de filas con valores
        except Exception as e:
            st.error(f"‚ùå Error al leer valores de la hoja: {e}")
            return sheet

        if not current or len(current) == 0:
            headers = [
                "Fecha y hora",
                "Categor√≠a del negocio",
                "A√±os de operaci√≥n",
                "Tipo de cliente principal",
                "Medidas de seguridad implementadas",
                "Cambios operativos realizados",
                "Impacto en las ventas",
                "Frecuencia de comentarios sobre seguridad",
                "Delito m√°s preocupante",
                "Frecuencia de delitos",
                "Momento de mayor riesgo",
                "Urgencia: Aumentar oficiales",
                "Urgencia: Aumentar patrullaje a pie",
                "Urgencia: Mejorar iluminaci√≥n",
                "Urgencia: Instalar c√°maras monitoreadas",
                "Urgencia: Implementaci√≥n programas policiales",
                "Efecto disuasorio: Mayor presencia policial",
                "Efecto disuasorio: OIJ efectivo",
                "Efecto disuasorio: C√°maras estrat√©gicas",
                "Efecto disuasorio: Controles de carretera",
                "Efecto disuasorio: Programas sociales",
                "Percepci√≥n: Presencia policial suficiente",
                "Percepci√≥n: Tiempo de respuesta",
                "Percepci√≥n: Confianza en denuncias",
                "Percepci√≥n: Profesionalismo policial",
                "Percepci√≥n: Recursos suficientes",
                "Percepci√≥n: Programas efectivos",
                "Razones para no denunciar",
                "Acci√≥n que aumentar√≠a confianza",
                "Disposici√≥n para alianza p√∫blico-privada"
            ]
            try:
                # insert_row pone los encabezados en la fila 1
                sheet.insert_row(headers, 1)
                st.info("üîß Encabezados creados autom√°ticamente en la hoja.")
            except Exception as e:
                st.error(f"‚ùå No se pudieron crear encabezados: {e}")

        return sheet
    except Exception as e:
        st.error(f"‚ùå Error general al conectar con Google Sheets: {e}")
        return None

# === PARTE 2: ESTILOS Y BANNER ===
st.markdown("""
<style>
html, body, .stApp {
    color-scheme: light !important;
    background-color: #2C517A !important;
    color: #ffffff !important;
    font-weight: bold !important;
}
h1, h2, h3 { color: #FAFEF3; }
.expander-title {
    background-color: #347A59;
    color: #ffffff;
    font-size:18px;
    font-weight:bold;
    border-radius:10px;
    padding:15px 20px;
    margin-bottom:-20px;
    text-align:left;
}
summary::marker { display:none; }
div[data-testid="stExpander"] > div {
    background-color:#ffffff;
    border:2px solid #ff4b4b;
    border-radius:12px;
    padding:10px;
}
.stSelectbox > div, .stRadio > div, .stMultiSelect > div, .stTextArea > div {
    background-color:#51924b;
    border:2px solid #51924b;
    border-radius:10px;
    padding:10px;
    color:#2C517A !important;
}
.stButton > button {
    background-color:#DF912F;
    color:#ffffff;
    border:none;
    border-radius:10px;
    padding:10px 24px;
    font-size:16px;
}
.stButton > button:hover {
    background-color:#DF912F;
    color:white;
}
div[role="radiogroup"] label[data-selected="true"],
div[role="listbox"] div[data-selected="true"] {
    color:#ffffff !important;
    border-radius:8px !important;
    font-weight:bold !important;
}
div[role="radiogroup"] label[data-selected="true"]::after,
div[role="listbox"] div[data-selected="true"]::after {
    content:" ‚úÖ";
    margin-left:6px;
}
label, .stMarkdown p {
    color:#ffffff !important;
    font-weight:600;
}
@media only screen and (max-width:768px) {
    iframe { height:300px !important; max-height:300px !important; }
}
</style>
""", unsafe_allow_html=True)

# Si tu banner no est√° disponible, comentalo temporalmente para evitar errores
try:
    banner = Image.open("baner.png")
    st.markdown('<div class="banner-container">', unsafe_allow_html=True)
    st.image(banner, use_container_width=True)
    st.markdown('</div>', unsafe_allow_html=True)
except Exception:
    # no interrumpe la app si la imagen no est√° disponible
    pass

st.markdown("""
**Con el objetivo de fortalecer la seguridad en nuestro entorno comercial, nos enfocamos en abordar las principales preocupaciones de seguridad.**
La informaci√≥n que nos suministras es completamente confidencial y se emplea exclusivamente con el prop√≥sito de mejorar la seguridad en nuestra √°rea comercial.
""", unsafe_allow_html=True)

# === NUEVO FORMULARIO (16 preguntas solicitadas) ===
st.title("Encuesta: Seguridad en S√°mara")
st.markdown("Por favor complete este formulario de forma an√≥nima. Sus respuestas ser√°n confidenciales y utilizadas √∫nicamente para fines de diagn√≥stico y mejora de la seguridad local.")

# === PARTE 3..7: reemplazadas por las nuevas secciones solicitadas ===
with st.expander("Secci√≥n 1: Perfil de su Negocio", expanded=True):
    categoria = st.radio(
        "1. ¬øCu√°l de las siguientes categor√≠as describe mejor su negocio?",
        ["Hoteler√≠a / Hospedaje", "Restaurante / Bar", "Tour Operador / Actividad Tur√≠stica",
         "Tienda / Supermercado", "Otro (especifique)"]
    )
    if categoria == "Otro (especifique)":
        categoria_otro = st.text_input("Especifique otra categor√≠a:")
        if categoria_otro:
            categoria = f"Otro: {categoria_otro}"

    a√±os = st.radio(
        "2. ¬øHace cu√°ntos a√±os opera su negocio en S√°mara?",
        ["Menos de 2 a√±os", "Entre 2 y 5 a√±os", "Entre 6 y 10 a√±os", "M√°s de 10 a√±os"]
    )

    clientes = st.radio(
        "3. ¬øQui√©nes son su principal tipo de cliente?",
        ["Principalmente turistas extranjeros", "Principalmente turistas nacionales",
         "Una mezcla equilibrada de turistas y residentes locales", "Principalmente residentes locales"]
    )

with st.expander("Secci√≥n 2: Impacto en su Negocio", expanded=False):
    medidas = st.multiselect(
        "4. En el √∫ltimo a√±o, ¬øcu√°les de las siguientes medidas de seguridad ha implementado o reforzado? (Marque todos los que apliquen)",
        ["Contrataci√≥n de seguridad privada / guarda", "Instalaci√≥n o mejora de c√°maras de vigilancia",
         "Instalaci√≥n de sistema de alarmas", "Mejora de la iluminaci√≥n externa", "Reforzamiento de cerraduras, puertas o ventanas",
         "No he implementado nuevas medidas", "Otra (especifique)"]
    )
    medidas_otro = ""
    if "Otra (especifique)" in medidas:
        medidas_otro = st.text_input("Especifique otra medida de seguridad:")
        if medidas_otro:
            # sustituimos la opci√≥n gen√©rica por la versi√≥n con texto
            medidas = [m for m in medidas if m != "Otra (especifique)"] + [f"Otro: {medidas_otro}"]

    cambios = st.multiselect(
        "5. A ra√≠z de la situaci√≥n de seguridad, ¬øha realizado alguno de los siguientes cambios operativos? (Marque todos los que apliquen)",
        ["He reducido el horario de atenci√≥n al p√∫blico", "He modificado los horarios de mi personal por su seguridad",
         "He tenido que acompa√±ar a clientes o personal a sus veh√≠culos", "He experimentado mayor rotaci√≥n de personal o dificultad para contratar",
         "No he realizado cambios operativos", "Otro (especifique)"]
    )
    cambios_otro = ""
    if "Otro (especifique)" in cambios:
        cambios_otro = st.text_input("Especifique otro cambio operativo:")
        if cambios_otro:
            cambios = [c for c in cambios if c != "Otro (especifique)"] + [f"Otro: {cambios_otro}"]

    impacto = st.radio(
        "6. ¬øC√≥mo calificar√≠a el impacto de la inseguridad en sus ventas o ingresos del √∫ltimo a√±o?",
        ["Impacto muy negativo (p√©rdidas significativas)", "Impacto negativo (p√©rdidas moderadas)",
         "Poco o ning√∫n impacto", "No estoy seguro/a"]
    )

    frecuencia_clientes = st.radio(
        "7. ¬øCon qu√© frecuencia recibe comentarios o preguntas de sus clientes sobre la seguridad en S√°mara?",
        ["Muy frecuentemente (casi todos los d√≠as)", "Frecuentemente (varias veces a la semana)",
         "Ocasionalmente (algunas veces al mes)", "Casi nunca"]
    )

with st.expander("Secci√≥n 3: Caracterizaci√≥n del Delito", expanded=False):
    delito = st.radio(
        "8. Desde la perspectiva de su negocio y sus alrededores, ¬øcu√°l es el delito M√ÅS PREOCUPANTE?",
        ["Hurtos a turistas por descuido (en la playa, restaurante, etc.)", "Robos a locales comerciales (cuando est√°n cerrados)",
         "Tachas o robos a veh√≠culos de clientes", "Asaltos o arrebatos en la v√≠a p√∫blica", "Venta de drogas en los alrededores"]
    )

    frecuencia_delito = st.radio(
        "9. En su opini√≥n, la frecuencia de estos delitos en la zona comercial es...",
        ["Constante, ocurre casi a diario.", "Frecuente, ocurre varias veces por semana.",
         "Peri√≥dica, ocurre en rachas o algunas veces al mes.", "Poco frecuente."]
    )

    momento_riesgo = st.radio(
        "10. ¬øEn qu√© momento percibe que hay MAYOR RIESGO en la zona comercial?",
        ["Durante la noche (despu√©s de las 9 p.m.)", "Durante la madrugada", "Durante el d√≠a, por el descuido de los turistas",
         "El riesgo es constante a toda hora"]
    )

with st.expander("Secci√≥n 4: Soluciones y Prioridades", expanded=False):
    st.markdown("11. Valore de 1 a 5 la URGENCIA de las siguientes acciones (1 = Poco urgente, 5 = M√°xima urgencia).")
    urgencia1 = st.slider("Aumentar el n√∫mero de oficiales de Fuerza P√∫blica", 1, 5, 3)
    urgencia2 = st.slider("Aumentar el patrullaje a pie en zonas comerciales", 1, 5, 3)
    urgencia3 = st.slider("Mejorar significativamente la iluminaci√≥n p√∫blica", 1, 5, 3)
    urgencia4 = st.slider("Instalar un sistema de c√°maras de vigilancia monitoreado", 1, 5, 3)
    urgencia5 = st.slider("Implementaci√≥n de Programas Policiales efectivos", 1, 5, 3)

    st.markdown("12. Valore de 1 a 5 la URGENCIA de las siguientes acciones que tendr√≠an EFECTO DISUASORIO.")
    efecto1 = st.slider("Mayor presencia policial visible (patrullaje a pie)", 1, 5, 3)
    efecto2 = st.slider("Investigaciones y detenciones efectivas por parte del OIJ", 1, 5, 3)
    efecto3 = st.slider("C√°maras de vigilancia en puntos estrat√©gicos", 1, 5, 3)
    efecto4 = st.slider("Controles de carretera (retenes) en las entradas del pueblo", 1, 5, 3)
    efecto5 = st.slider("Programas sociales para j√≥venes locales", 1, 5, 3)

with st.expander("Percepci√≥n sobre la Fuerza P√∫blica", expanded=False):
    st.markdown("13. Indique su nivel de acuerdo o desacuerdo (Muy en desacuerdo ... Muy de acuerdo).")
    p1 = st.radio("La presencia policial actual en la zona comercial es suficiente para disuadir el delito.", ["Muy en desacuerdo", "En desacuerdo", "Neutral", "De acuerdo", "Muy de acuerdo"])
    p2 = st.radio("El tiempo de respuesta de la polic√≠a cuando se reporta un incidente es r√°pido.", ["Muy en desacuerdo", "En desacuerdo", "Neutral", "De acuerdo", "Muy de acuerdo"])
    p3 = st.radio("Conf√≠o en que la polic√≠a tomar√° en serio una denuncia si la presento.", ["Muy en desacuerdo", "En desacuerdo", "Neutral", "De acuerdo", "Muy de acuerdo"])
    p4 = st.radio("La polic√≠a trata a los comerciantes y al p√∫blico con profesionalismo y respeto.", ["Muy en desacuerdo", "En desacuerdo", "Neutral", "De acuerdo", "Muy de acuerdo"])
    p5 = st.radio("Siento que la polic√≠a cuenta con los recursos necesarios para ser efectiva.", ["Muy en desacuerdo", "En desacuerdo", "Neutral", "De acuerdo", "Muy de acuerdo"])
    p6 = st.radio("Los programas policiales implementados han sido efectivos en la zona.", ["Muy en desacuerdo", "En desacuerdo", "Neutral", "De acuerdo", "Muy de acuerdo"])

with st.expander("Razones y confianza", expanded=False):
    razones = st.multiselect(
        "14. Si alguna vez usted o alguien de su entorno ha dudado en presentar una denuncia formal a la polic√≠a, ¬øcu√°l ha sido la raz√≥n principal? (Marque todas las que apliquen)",
        ["Miedo a represalias por parte de los delincuentes", "Creencia de que la denuncia no llevar√° a ning√∫n resultado (impunidad)",
         "El proceso para denunciar es demasiado lento o complicado", "Falta de confianza en la confidencialidad de la denuncia",
         "El incidente se consider√≥ 'menor' y no val√≠a la pena el esfuerzo", "Prefiero alertar por canales informales (chats de vecinos/comerciantes)",
         "No he dudado en denunciar", "Otra raz√≥n (especifique)"]
    )
    otra_razon = ""
    if "Otra raz√≥n (especifique)" in razones:
        otra_razon = st.text_input("Especifique otra raz√≥n:")
        if otra_razon:
            razones = [r for r in razones if r != "Otra raz√≥n (especifique)"] + [f"Otro: {otra_razon}"]

    confianza = st.radio(
        "15. Desde su perspectiva como comerciante, ¬øqu√© acci√≥n por parte de la polic√≠a aumentar√≠a M√ÅS su confianza en la instituci√≥n?",
        ["Ver patrullajes a pie de forma constante en la zona comercial", "Obtener respuestas mucho m√°s r√°pidas cuando se les llama",
         "Ver que las denuncias resultan en detenciones y procesos judiciales efectivos", "Tener reuniones peri√≥dicas y una comunicaci√≥n m√°s abierta con el sector comercial",
         "Otra (especifique)"]
    )
    if confianza == "Otra (especifique)":
        confianza_otro = st.text_input("Especifique otra acci√≥n que aumentar√≠a su confianza:")
        if confianza_otro:
            confianza = f"Otro: {confianza_otro}"

    alianza = st.radio(
        "16. ¬øEstar√≠a su negocio dispuesto a participar en una alianza p√∫blico-privada para cofinanciar un proyecto de seguridad (ej. sistema de c√°maras centralizado)?",
        ["S√≠, definitivamente", "S√≠, dependiendo del costo y el plan", "Quiz√°s, necesitar√≠a m√°s informaci√≥n", "No"]
    )

# === PARTE 8: ENV√çO Y VALIDACI√ìN (manteniendo la estructura original) ===
if not st.session_state.enviado:
    if st.button("Enviar formulario"):
        errores = []
        # Validaciones m√≠nimas: requerir las 3 preguntas iniciales (puedes ampliar si lo deseas)
        if not categoria:
            errores.append("Categor√≠a del negocio")
        if not a√±os:
            errores.append("A√±os de operaci√≥n")
        if not clientes:
            errores.append("Tipo de cliente principal")

        if errores:
            st.error("‚ö†Ô∏è Faltan campos obligatorios: " + ", ".join(errores))
        else:
            # Armar datos en el mismo orden que los encabezados
            datos = [
                datetime.now().isoformat(),
                categoria,
                a√±os,
                clientes,
                "; ".join(medidas) if medidas else "",
                "; ".join(cambios) if cambios else "",
                impacto,
                frecuencia_clientes,
                delito,
                frecuencia_delito,
                momento_riesgo,
                urgencia1, urgencia2, urgencia3, urgencia4, urgencia5,
                efecto1, efecto2, efecto3, efecto4, efecto5,
                p1, p2, p3, p4, p5, p6,
                "; ".join(razones) if razones else "",
                confianza,
                alianza
            ]

            sheet = conectar_google_sheets()
            if sheet:
                try:
                    # Asegurar consistencia con encabezados actuales
                    headers_row = sheet.row_values(1)
                    headers_len = len(headers_row)

                    # Si por alguna raz√≥n la fila de encabezados est√° vac√≠a, forzamos creaci√≥n
                    if headers_len == 0:
                        st.warning("La fila de encabezados est√° vac√≠a ‚Äî intentando crear encabezados por seguridad.")
                        default_headers = [f"Col_{i+1}" for i in range(len(datos))]
                        sheet.insert_row(default_headers, 1)
                        headers_row = default_headers
                        headers_len = len(headers_row)

                    # Si envi√°s m√°s datos que encabezados, ampliamos encabezados con "Extra_X"
                    if len(datos) > headers_len:
                        extra = len(datos) - headers_len
                        new_headers = headers_row + [f"Extra_{i+1}" for i in range(extra)]
                        sheet.update('A1', [new_headers])
                        headers_row = new_headers
                        headers_len = len(new_headers)
                        st.info(f"üîß Se ampliaron los encabezados (+{extra}).")

                    # Si envi√°s menos datos, rellenamos con cadenas vac√≠as
                    if len(datos) < headers_len:
                        datos += [""] * (headers_len - len(datos))

                    # Convertir todo a string (evita None)
                    datos = [str(d) if d is not None else "" for d in datos]

                    # Append la fila al final
                    sheet.append_row(datos, value_input_option='USER_ENTERED')

                    st.session_state.enviado = True
                    st.success("‚úÖ ¬°Formulario enviado correctamente!")
                    if st.button("üìù Enviar otra respuesta"):
                        st.session_state.enviado = False
                        st.experimental_rerun()
                except Exception as e:
                    st.error(f"‚ùå Error al guardar: {e}")
            else:
                st.error("‚ùå No se pudo conectar con Google Sheets.")
else:
    st.info("Ya completaste la encuesta. ¬°Gracias!")

st.markdown("<p style='text-align:center;color:#88E145;font-size:10px'>Sembremos Seguridad - 2025</p>", unsafe_allow_html=True)
